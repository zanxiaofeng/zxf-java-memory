/home/davis/.jdks/corretto-1.8.0_402/bin/java -XX:+UseG1GC -Xss128M -XshowSettings -XX:+PrintFlagsFinal -XX:NativeMemoryTracking=detail -javaagent:/home/davis/Apps/idea-IC/lib/idea_rt.jar=37289:/home/davis/Apps/idea-IC/bin -Dfile.encoding=UTF-8 -classpath /home/davis/.jdks/corretto-1.8.0_402/jre/lib/charsets.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/cldrdata.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/dnsns.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/jaccess.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/jfxrt.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/localedata.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/nashorn.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/sunec.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/sunjce_provider.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/sunpkcs11.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/zipfs.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/jce.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/jfr.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/jfxswt.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/jsse.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/management-agent.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/resources.jar:/home/davis/.jdks/corretto-1.8.0_402/jre/lib/rt.jar:/home/davis/Work/zxf-java-memory/target/classes:/home/davis/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.6.8/spring-boot-starter-web-2.6.8.jar:/home/davis/.m2/repository/org/springframework/boot/spring-boot-starter/2.6.8/spring-boot-starter-2.6.8.jar:/home/davis/.m2/repository/org/springframework/boot/spring-boot/2.6.8/spring-boot-2.6.8.jar:/home/davis/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.6.8/spring-boot-autoconfigure-2.6.8.jar:/home/davis/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.6.8/spring-boot-starter-logging-2.6.8.jar:/home/davis/.m2/repository/ch/qos/logback/logback-classic/1.2.11/logback-classic-1.2.11.jar:/home/davis/.m2/repository/ch/qos/logback/logback-core/1.2.11/logback-core-1.2.11.jar:/home/davis/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/home/davis/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/home/davis/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/home/davis/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/home/davis/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/davis/.m2/repository/org/springframework/spring-core/5.3.20/spring-core-5.3.20.jar:/home/davis/.m2/repository/org/springframework/spring-jcl/5.3.20/spring-jcl-5.3.20.jar:/home/davis/.m2/repository/org/yaml/snakeyaml/1.29/snakeyaml-1.29.jar:/home/davis/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.6.8/spring-boot-starter-json-2.6.8.jar:/home/davis/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/home/davis/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/home/davis/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/home/davis/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.3/jackson-datatype-jdk8-2.13.3.jar:/home/davis/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.3/jackson-datatype-jsr310-2.13.3.jar:/home/davis/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.3/jackson-module-parameter-names-2.13.3.jar:/home/davis/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.6.8/spring-boot-starter-tomcat-2.6.8.jar:/home/davis/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.63/tomcat-embed-core-9.0.63.jar:/home/davis/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.63/tomcat-embed-el-9.0.63.jar:/home/davis/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.63/tomcat-embed-websocket-9.0.63.jar:/home/davis/.m2/repository/org/springframework/spring-web/5.3.20/spring-web-5.3.20.jar:/home/davis/.m2/repository/org/springframework/spring-beans/5.3.20/spring-beans-5.3.20.jar:/home/davis/.m2/repository/org/springframework/spring-webmvc/5.3.20/spring-webmvc-5.3.20.jar:/home/davis/.m2/repository/org/springframework/spring-aop/5.3.20/spring-aop-5.3.20.jar:/home/davis/.m2/repository/org/springframework/spring-context/5.3.20/spring-context-5.3.20.jar:/home/davis/.m2/repository/org/springframework/spring-expression/5.3.20/spring-expression-5.3.20.jar:/home/davis/.m2/repository/org/apache/pdfbox/pdfbox/2.0.29/pdfbox-2.0.29.jar:/home/davis/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/davis/.m2/repository/org/apache/pdfbox/fontbox/2.0.29/fontbox-2.0.29.jar:/home/davis/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.4.0.24.05/ojdbc8-23.4.0.24.05.jar:/home/davis/.m2/repository/com/oracle/database/jdbc/ucp/23.4.0.24.05/ucp-23.4.0.24.05.jar:/home/davis/.m2/repository/com/oracle/database/ha/ons/23.4.0.24.05/ons-23.4.0.24.05.jar:/home/davis/.m2/repository/commons-io/commons-io/2.5/commons-io-2.5.jar:/home/davis/.m2/repository/org/openjdk/jol/jol-core/0.17/jol-core-0.17.jar zxf.java.memory.oom.TestThreadStackSpaceOOM
Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
[Global flags]
     intx ActiveProcessorCount                      = -1                                  {product}
    uintx AdaptiveSizeDecrementScaleFactor          = 4                                   {product}
    uintx AdaptiveSizeMajorGCDecayTimeScale         = 10                                  {product}
    uintx AdaptiveSizePausePolicy                   = 0                                   {product}
    uintx AdaptiveSizePolicyCollectionCostMargin    = 50                                  {product}
    uintx AdaptiveSizePolicyInitializingSteps       = 20                                  {product}
    uintx AdaptiveSizePolicyOutputInterval          = 0                                   {product}
    uintx AdaptiveSizePolicyWeight                  = 10                                  {product}
    uintx AdaptiveSizeThroughPutPolicy              = 0                                   {product}
    uintx AdaptiveTimeWeight                        = 25                                  {product}
     bool AdjustConcurrency                         = false                               {product}
     bool AggressiveHeap                            = false                               {product}
     bool AggressiveOpts                            = false                               {product}
     intx AliasLevel                                = 3                                   {C2 product}
     bool AlignVector                               = false                               {C2 product}
     intx AllocateInstancePrefetchLines             = 1                                   {product}
     intx AllocatePrefetchDistance                  = 192                                 {product}
     intx AllocatePrefetchInstr                     = 3                                   {product}
     intx AllocatePrefetchLines                     = 4                                   {product}
     intx AllocatePrefetchStepSize                  = 64                                  {product}
     intx AllocatePrefetchStyle                     = 1                                   {product}
     bool AllowJNIEnvProxy                          = false                               {product}
     bool AllowNonVirtualCalls                      = false                               {product}
     bool AllowParallelDefineClass                  = false                               {product}
     bool AllowUserSignalHandlers                   = false                               {product}
     bool AlwaysActAsServerClassMachine             = false                               {product}
     bool AlwaysCompileLoopMethods                  = false                               {product}
     bool AlwaysLockClassLoader                     = false                               {product}
     bool AlwaysPreTouch                            = false                               {product}
     bool AlwaysRestoreFPU                          = false                               {product}
     bool AlwaysTenure                              = false                               {product}
     bool AssertOnSuspendWaitFailure                = false                               {product}
     bool AssumeMP                                  = false                               {product}
     intx AutoBoxCacheMax                           = 128                                 {C2 product}
    uintx AutoGCSelectPauseMillis                   = 5000                                {product}
     intx BCEATraceLevel                            = 0                                   {product}
     intx BackEdgeThreshold                         = 100000                              {pd product}
     bool BackgroundCompilation                     = true                                {pd product}
    uintx BaseFootPrintEstimate                     = 268435456                           {product}
     intx BiasedLockingBulkRebiasThreshold          = 20                                  {product}
     intx BiasedLockingBulkRevokeThreshold          = 40                                  {product}
     intx BiasedLockingDecayTime                    = 25000                               {product}
     intx BiasedLockingStartupDelay                 = 4000                                {product}
     bool BindGCTaskThreadsToCPUs                   = false                               {product}
     bool BlockLayoutByFrequency                    = true                                {C2 product}
     intx BlockLayoutMinDiamondPercentage           = 20                                  {C2 product}
     bool BlockLayoutRotateLoops                    = true                                {C2 product}
     bool BranchOnRegister                          = false                               {C2 product}
     bool BytecodeVerificationLocal                 = false                               {product}
     bool BytecodeVerificationRemote                = true                                {product}
     bool C1OptimizeVirtualCallProfiling            = true                                {C1 product}
     bool C1ProfileBranches                         = true                                {C1 product}
     bool C1ProfileCalls                            = true                                {C1 product}
     bool C1ProfileCheckcasts                       = true                                {C1 product}
     bool C1ProfileInlinedCalls                     = true                                {C1 product}
     bool C1ProfileVirtualCalls                     = true                                {C1 product}
     bool C1UpdateMethodData                        = true                                {C1 product}
     intx CICompilerCount                          := 12                                  {product}
     bool CICompilerCountPerCPU                     = true                                {product}
     bool CITime                                    = false                               {product}
     bool CMSAbortSemantics                         = false                               {product}
    uintx CMSAbortablePrecleanMinWorkPerIteration   = 100                                 {product}
     intx CMSAbortablePrecleanWaitMillis            = 100                                 {manageable}
    uintx CMSBitMapYieldQuantum                     = 10485760                            {product}
    uintx CMSBootstrapOccupancy                     = 50                                  {product}
     bool CMSClassUnloadingEnabled                  = true                                {product}
    uintx CMSClassUnloadingMaxInterval              = 0                                   {product}
     bool CMSCleanOnEnter                           = true                                {product}
     bool CMSCompactWhenClearAllSoftRefs            = true                                {product}
    uintx CMSConcMarkMultiple                       = 32                                  {product}
     bool CMSConcurrentMTEnabled                    = true                                {product}
    uintx CMSCoordinatorYieldSleepCount             = 10                                  {product}
     bool CMSDumpAtPromotionFailure                 = false                               {product}
     bool CMSEdenChunksRecordAlways                 = true                                {product}
    uintx CMSExpAvgFactor                           = 50                                  {product}
     bool CMSExtrapolateSweep                       = false                               {product}
    uintx CMSFullGCsBeforeCompaction                = 0                                   {product}
    uintx CMSIncrementalDutyCycle                   = 10                                  {product}
    uintx CMSIncrementalDutyCycleMin                = 0                                   {product}
     bool CMSIncrementalMode                        = false                               {product}
    uintx CMSIncrementalOffset                      = 0                                   {product}
     bool CMSIncrementalPacing                      = true                                {product}
    uintx CMSIncrementalSafetyFactor                = 10                                  {product}
    uintx CMSIndexedFreeListReplenish               = 4                                   {product}
     intx CMSInitiatingOccupancyFraction            = -1                                  {product}
    uintx CMSIsTooFullPercentage                    = 98                                  {product}
   double CMSLargeCoalSurplusPercent                = 0.950000                            {product}
   double CMSLargeSplitSurplusPercent               = 1.000000                            {product}
     bool CMSLoopWarn                               = false                               {product}
    uintx CMSMaxAbortablePrecleanLoops              = 0                                   {product}
     intx CMSMaxAbortablePrecleanTime               = 5000                                {product}
    uintx CMSOldPLABMax                             = 1024                                {product}
    uintx CMSOldPLABMin                             = 16                                  {product}
    uintx CMSOldPLABNumRefills                      = 4                                   {product}
    uintx CMSOldPLABReactivityFactor                = 2                                   {product}
     bool CMSOldPLABResizeQuicker                   = false                               {product}
    uintx CMSOldPLABToleranceFactor                 = 4                                   {product}
     bool CMSPLABRecordAlways                       = true                                {product}
    uintx CMSParPromoteBlocksToClaim                = 16                                  {product}
     bool CMSParallelInitialMarkEnabled             = true                                {product}
     bool CMSParallelRemarkEnabled                  = true                                {product}
     bool CMSParallelSurvivorRemarkEnabled          = true                                {product}
    uintx CMSPrecleanDenominator                    = 3                                   {product}
    uintx CMSPrecleanIter                           = 3                                   {product}
    uintx CMSPrecleanNumerator                      = 2                                   {product}
     bool CMSPrecleanRefLists1                      = true                                {product}
     bool CMSPrecleanRefLists2                      = false                               {product}
     bool CMSPrecleanSurvivors1                     = false                               {product}
     bool CMSPrecleanSurvivors2                     = true                                {product}
    uintx CMSPrecleanThreshold                      = 1000                                {product}
     bool CMSPrecleaningEnabled                     = true                                {product}
     bool CMSPrintChunksInDump                      = false                               {product}
     bool CMSPrintEdenSurvivorChunks                = false                               {product}
     bool CMSPrintObjectsInDump                     = false                               {product}
    uintx CMSRemarkVerifyVariant                    = 1                                   {product}
     bool CMSReplenishIntermediate                  = true                                {product}
    uintx CMSRescanMultiple                         = 32                                  {product}
    uintx CMSSamplingGrain                          = 16384                               {product}
     bool CMSScavengeBeforeRemark                   = false                               {product}
    uintx CMSScheduleRemarkEdenPenetration          = 50                                  {product}
    uintx CMSScheduleRemarkEdenSizeThreshold        = 2097152                             {product}
    uintx CMSScheduleRemarkSamplingRatio            = 5                                   {product}
   double CMSSmallCoalSurplusPercent                = 1.050000                            {product}
   double CMSSmallSplitSurplusPercent               = 1.100000                            {product}
     bool CMSSplitIndexedFreeListBlocks             = true                                {product}
     intx CMSTriggerInterval                        = -1                                  {manageable}
    uintx CMSTriggerRatio                           = 80                                  {product}
     intx CMSWaitDuration                           = 2000                                {manageable}
    uintx CMSWorkQueueDrainThreshold                = 10                                  {product}
     bool CMSYield                                  = true                                {product}
    uintx CMSYieldSleepCount                        = 0                                   {product}
    uintx CMSYoungGenPerWorker                      = 67108864                            {pd product}
    uintx CMS_FLSPadding                            = 1                                   {product}
    uintx CMS_FLSWeight                             = 75                                  {product}
    uintx CMS_SweepPadding                          = 1                                   {product}
    uintx CMS_SweepTimerThresholdMillis             = 10                                  {product}
    uintx CMS_SweepWeight                           = 75                                  {product}
     bool CheckEndorsedAndExtDirs                   = false                               {product}
     bool CheckJNICalls                             = false                               {product}
     bool ClassUnloading                            = true                                {product}
     bool ClassUnloadingWithConcurrentMark          = true                                {product}
     intx ClearFPUAtPark                            = 0                                   {product}
     bool ClipInlining                              = true                                {product}
    uintx CodeCacheExpansionSize                    = 65536                               {pd product}
    uintx CodeCacheMinimumFreeSpace                 = 512000                              {product}
     bool CollectGen0First                          = false                               {product}
     bool CompactFields                             = true                                {product}
     intx CompilationPolicyChoice                   = 3                                   {product}
ccstrlist CompileCommand                            =                                     {product}
    ccstr CompileCommandFile                        =                                     {product}
ccstrlist CompileOnly                               =                                     {product}
     intx CompileThreshold                          = 10000                               {pd product}
     bool CompilerThreadHintNoPreempt               = true                                {product}
     intx CompilerThreadPriority                    = -1                                  {product}
     intx CompilerThreadStackSize                   = 0                                   {pd product}
    uintx CompressedClassSpaceSize                  = 1073741824                          {product}
    uintx ConcGCThreads                            := 4                                   {product}
     intx ConditionalMoveLimit                      = 3                                   {C2 pd product}
     intx ContendedPaddingWidth                     = 128                                 {product}
     bool ConvertSleepToYield                       = true                                {pd product}
     bool ConvertYieldToSleep                       = false                               {product}
     bool CrashOnOutOfMemoryError                   = false                               {product}
     bool CreateMinidumpOnCrash                     = false                               {product}
     bool CriticalJNINatives                        = true                                {product}
     bool DTraceAllocProbes                         = false                               {product}
     bool DTraceMethodProbes                        = false                               {product}
     bool DTraceMonitorProbes                       = false                               {product}
     bool Debugging                                 = false                               {product}
    uintx DefaultMaxRAMFraction                     = 4                                   {product}
     intx DefaultThreadPriority                     = -1                                  {product}
     intx DeferPollingPageLoopCount                 = -1                                  {product}
     intx DeferThrSuspendLoopCount                  = 4000                                {product}
     bool DeoptimizeRandom                          = false                               {product}
     bool DisableAttachMechanism                    = false                               {product}
     bool DisableExplicitGC                         = false                               {product}
     bool DisplayVMOutputToStderr                   = false                               {product}
     bool DisplayVMOutputToStdout                   = false                               {product}
     bool DoEscapeAnalysis                          = true                                {C2 product}
     bool DontCompileHugeMethods                    = true                                {product}
     bool DontYieldALot                             = false                               {pd product}
    ccstr DumpLoadedClassList                       =                                     {product}
     bool DumpReplayDataOnError                     = true                                {product}
     bool DumpSharedSpaces                          = false                               {product}
     bool EagerXrunInit                             = false                               {product}
     intx EliminateAllocationArraySizeLimit         = 64                                  {C2 product}
     bool EliminateAllocations                      = true                                {C2 product}
     bool EliminateAutoBox                          = true                                {C2 product}
     bool EliminateLocks                            = true                                {C2 product}
     bool EliminateNestedLocks                      = true                                {C2 product}
     intx EmitSync                                  = 0                                   {product}
     bool EnableContended                           = true                                {product}
     bool EnableTracing                             = false                               {product}
    uintx ErgoHeapSizeLimit                         = 0                                   {product}
    ccstr ErrorFile                                 =                                     {product}
     bool ErrorFileToStderr                         = false                               {product}
     bool ErrorFileToStdout                         = false                               {product}
    ccstr ErrorReportServer                         =                                     {product}
   double EscapeAnalysisTimeout                     = 20.000000                           {C2 product}
     bool EstimateArgEscape                         = true                                {product}
     bool ExitOnOutOfMemoryError                    = false                               {product}
     bool ExplicitGCInvokesConcurrent               = false                               {product}
     bool ExplicitGCInvokesConcurrentAndUnloadsClasses  = false                               {product}
     bool ExtendedDTraceProbes                      = false                               {product}
    ccstr ExtraSharedClassListFile                  =                                     {product}
     bool FLSAlwaysCoalesceLarge                    = false                               {product}
    uintx FLSCoalescePolicy                         = 2                                   {product}
   double FLSLargestBlockCoalesceProximity          = 0.990000                            {product}
     bool FailOverToOldVerifier                     = true                                {product}
     bool FastTLABRefill                            = false                               {product}
     intx FenceInstruction                          = 0                                   {ARCH product}
     intx FieldsAllocationStyle                     = 1                                   {product}
     bool FilterSpuriousWakeups                     = true                                {product}
     bool FlightRecorder                            = false                               {product}
    ccstr FlightRecorderOptions                     =                                     {product}
     bool ForceNUMA                                 = false                               {product}
     bool ForceTimeHighResolution                   = false                               {product}
     intx FreqInlineSize                            = 325                                 {pd product}
   double G1ConcMarkStepDurationMillis              = 10.000000                           {product}
    uintx G1ConcRSHotCardLimit                      = 4                                   {product}
    uintx G1ConcRSLogCacheSize                      = 10                                  {product}
     intx G1ConcRefinementGreenZone                 = 15                                  {product}
     intx G1ConcRefinementRedZone                   = 90                                  {product}
     intx G1ConcRefinementServiceIntervalMillis     = 300                                 {product}
    uintx G1ConcRefinementThreads                   = 15                                  {product}
     intx G1ConcRefinementThresholdStep             = 0                                   {product}
     intx G1ConcRefinementYellowZone                = 45                                  {product}
    uintx G1ConfidencePercent                       = 50                                  {product}
    uintx G1HeapRegionSize                         := 2097152                             {product}
    uintx G1HeapWastePercent                        = 5                                   {product}
    uintx G1MixedGCCountTarget                      = 8                                   {product}
     intx G1RSetRegionEntries                       = 512                                 {product}
    uintx G1RSetScanBlockSize                       = 64                                  {product}
     intx G1RSetSparseRegionEntries                 = 8                                   {product}
     intx G1RSetUpdatingPauseTimePercent            = 10                                  {product}
     intx G1RefProcDrainInterval                    = 10                                  {product}
    uintx G1ReservePercent                          = 10                                  {product}
    uintx G1SATBBufferEnqueueingThresholdPercent    = 60                                  {product}
     intx G1SATBBufferSize                          = 1024                                {product}
     intx G1UpdateBufferSize                        = 256                                 {product}
     bool G1UseAdaptiveConcRefinement               = true                                {product}
    uintx GCDrainStackTargetSize                    = 64                                  {product}
    uintx GCHeapFreeLimit                           = 2                                   {product}
    uintx GCLockerEdenExpansionPercent              = 5                                   {product}
     bool GCLockerInvokesConcurrent                 = false                               {product}
    uintx GCLogFileSize                             = 8192                                {product}
    uintx GCPauseIntervalMillis                     = 201                                 {product}
    uintx GCTaskTimeStampEntries                    = 200                                 {product}
    uintx GCTimeLimit                               = 98                                  {product}
    uintx GCTimeRatio                               = 9                                   {product}
    uintx HeapBaseMinAddress                        = 2147483648                          {pd product}
     bool HeapDumpAfterFullGC                       = false                               {manageable}
     bool HeapDumpBeforeFullGC                      = false                               {manageable}
     bool HeapDumpOnOutOfMemoryError                = false                               {manageable}
    ccstr HeapDumpPath                              =                                     {manageable}
    uintx HeapFirstMaximumCompactionCount           = 3                                   {product}
    uintx HeapMaximumCompactionInterval             = 20                                  {product}
    uintx HeapSizePerGCThread                       = 87241520                            {product}
     bool IgnoreEmptyClassPaths                     = false                               {product}
     bool IgnoreUnrecognizedVMOptions               = false                               {product}
    uintx IncreaseFirstTierCompileThresholdAt       = 50                                  {product}
     bool IncrementalInline                         = true                                {C2 product}
    uintx InitialBootClassLoaderMetaspaceSize       = 4194304                             {product}
    uintx InitialCodeCacheSize                      = 2555904                             {pd product}
    uintx InitialHeapSize                          := 522190848                           {product}
    uintx InitialRAMFraction                        = 64                                  {product}
   double InitialRAMPercentage                      = 1.562500                            {product}
    uintx InitialSurvivorRatio                      = 8                                   {product}
    uintx InitialTenuringThreshold                  = 7                                   {product}
    uintx InitiatingHeapOccupancyPercent            = 45                                  {product}
     bool Inline                                    = true                                {product}
    ccstr InlineDataFile                            =                                     {product}
     intx InlineSmallCode                           = 2000                                {pd product}
     bool InlineSynchronizedMethods                 = true                                {C1 product}
     bool InsertMemBarAfterArraycopy                = true                                {C2 product}
     intx InteriorEntryAlignment                    = 16                                  {C2 pd product}
     intx InterpreterProfilePercentage              = 33                                  {product}
     bool JNIDetachReleasesMonitors                 = true                                {product}
     bool JavaMonitorsInStackTrace                  = true                                {product}
     intx JavaPriority10_To_OSPriority              = -1                                  {product}
     intx JavaPriority1_To_OSPriority               = -1                                  {product}
     intx JavaPriority2_To_OSPriority               = -1                                  {product}
     intx JavaPriority3_To_OSPriority               = -1                                  {product}
     intx JavaPriority4_To_OSPriority               = -1                                  {product}
     intx JavaPriority5_To_OSPriority               = -1                                  {product}
     intx JavaPriority6_To_OSPriority               = -1                                  {product}
     intx JavaPriority7_To_OSPriority               = -1                                  {product}
     intx JavaPriority8_To_OSPriority               = -1                                  {product}
     intx JavaPriority9_To_OSPriority               = -1                                  {product}
     bool LIRFillDelaySlots                         = false                               {C1 pd product}
    uintx LargePageHeapSizeThreshold                = 134217728                           {product}
    uintx LargePageSizeInBytes                      = 0                                   {product}
     bool LazyBootClassLoader                       = true                                {product}
     intx LiveNodeCountInliningCutoff               = 40000                               {C2 product}
     bool LoadExecStackDllInVMThread                = true                                {product}
     bool LogJFR                                    = false                               {product}
     intx LoopMaxUnroll                             = 16                                  {C2 product}
     intx LoopOptsCount                             = 43                                  {C2 product}
     intx LoopUnrollLimit                           = 60                                  {C2 pd product}
     intx LoopUnrollMin                             = 4                                   {C2 product}
     bool LoopUnswitching                           = true                                {C2 product}
     bool ManagementServer                          = false                               {product}
    uintx MarkStackSize                            := 4194304                             {product}
    uintx MarkStackSizeMax                          = 16777216                            {product}
    uintx MarkSweepAlwaysCompactCount               = 4                                   {product}
    uintx MarkSweepDeadRatio                        = 5                                   {product}
     intx MaxBCEAEstimateLevel                      = 5                                   {product}
     intx MaxBCEAEstimateSize                       = 150                                 {product}
    uintx MaxDirectMemorySize                       = 0                                   {product}
     bool MaxFDLimit                                = true                                {product}
    uintx MaxGCMinorPauseMillis                     = 18446744073709551615                    {product}
    uintx MaxGCPauseMillis                          = 200                                 {product}
    uintx MaxHeapFreeRatio                          = 70                                  {manageable}
    uintx MaxHeapSize                              := 8344567808                          {product}
     intx MaxInlineLevel                            = 9                                   {product}
     intx MaxInlineSize                             = 35                                  {product}
     intx MaxJNILocalCapacity                       = 65536                               {product}
     intx MaxJavaStackTraceDepth                    = 1024                                {product}
     intx MaxJumpTableSize                          = 65000                               {C2 product}
     intx MaxJumpTableSparseness                    = 5                                   {C2 product}
     intx MaxLabelRootDepth                         = 1100                                {C2 product}
     intx MaxLoopPad                                = 11                                  {C2 product}
    uintx MaxMetaspaceExpansion                     = 5451776                             {product}
    uintx MaxMetaspaceFreeRatio                     = 70                                  {product}
    uintx MaxMetaspaceSize                          = 18446744073709547520                    {product}
    uintx MaxNewSize                               := 5005901824                          {product}
     intx MaxNodeLimit                              = 75000                               {C2 product}
 uint64_t MaxRAM                                    = 137438953472                        {pd product}
    uintx MaxRAMFraction                            = 4                                   {product}
   double MaxRAMPercentage                          = 25.000000                           {product}
     intx MaxRecursiveInlineLevel                   = 1                                   {product}
    uintx MaxTenuringThreshold                      = 15                                  {product}
     intx MaxTrivialSize                            = 6                                   {product}
     intx MaxVectorSize                             = 32                                  {C2 product}
    uintx MetaspaceSize                             = 21807104                            {pd product}
     bool MethodFlushing                            = true                                {product}
    uintx MinHeapDeltaBytes                        := 2097152                             {product}
    uintx MinHeapFreeRatio                          = 40                                  {manageable}
     intx MinInliningThreshold                      = 250                                 {product}
     intx MinJumpTableSize                          = 10                                  {C2 pd product}
    uintx MinMetaspaceExpansion                     = 339968                              {product}
    uintx MinMetaspaceFreeRatio                     = 40                                  {product}
    uintx MinRAMFraction                            = 2                                   {product}
   double MinRAMPercentage                          = 50.000000                           {product}
    uintx MinSurvivorRatio                          = 3                                   {product}
    uintx MinTLABSize                               = 2048                                {product}
     intx MonitorBound                              = 0                                   {product}
     bool MonitorInUseLists                         = true                                {product}
     intx MultiArrayExpandLimit                     = 6                                   {C2 product}
     bool MustCallLoadClassInternal                 = false                               {product}
    uintx NUMAChunkResizeWeight                     = 20                                  {product}
    uintx NUMAInterleaveGranularity                 = 2097152                             {product}
    uintx NUMAPageScanRate                          = 256                                 {product}
    uintx NUMASpaceResizeRate                       = 1073741824                          {product}
     bool NUMAStats                                 = false                               {product}
    ccstr NativeMemoryTracking                     := detail                              {product}
     bool NeedsDeoptSuspend                         = false                               {pd product}
     bool NeverActAsServerClassMachine              = false                               {pd product}
     bool NeverTenure                               = false                               {product}
    uintx NewRatio                                  = 2                                   {product}
    uintx NewSize                                   = 1363144                             {product}
    uintx NewSizeThreadIncrease                     = 5320                                {pd product}
     intx NmethodSweepActivity                      = 10                                  {product}
     intx NmethodSweepCheckInterval                 = 5                                   {product}
     intx NmethodSweepFraction                      = 16                                  {product}
     intx NodeLimitFudgeFactor                      = 2000                                {C2 product}
    uintx NumberOfGCLogFiles                        = 0                                   {product}
     intx NumberOfLoopInstrToAlign                  = 4                                   {C2 product}
     intx ObjectAlignmentInBytes                    = 8                                   {lp64_product}
    uintx OldPLABSize                               = 1024                                {product}
    uintx OldPLABWeight                             = 50                                  {product}
    uintx OldSize                                   = 5452592                             {product}
     bool OmitStackTraceInFastThrow                 = true                                {product}
ccstrlist OnError                                   =                                     {product}
ccstrlist OnOutOfMemoryError                        =                                     {product}
     intx OnStackReplacePercentage                  = 140                                 {pd product}
     bool OptimizeFill                              = true                                {C2 product}
     bool OptimizePtrCompare                        = true                                {C2 product}
     bool OptimizeStringConcat                      = true                                {C2 product}
     bool OptoBundling                              = false                               {C2 pd product}
     intx OptoLoopAlignment                         = 16                                  {pd product}
     bool OptoScheduling                            = false                               {C2 pd product}
    uintx PLABWeight                                = 75                                  {product}
     bool PSChunkLargeArrays                        = true                                {product}
     intx ParGCArrayScanChunk                       = 50                                  {product}
    uintx ParGCDesiredObjsFromOverflowList          = 20                                  {product}
     bool ParGCTrimOverflow                         = true                                {product}
     bool ParGCUseLocalOverflow                     = false                               {product}
    uintx ParallelGCBufferWastePct                  = 10                                  {product}
    uintx ParallelGCThreads                         = 15                                  {product}
     bool ParallelGCVerbose                         = false                               {product}
    uintx ParallelOldDeadWoodLimiterMean            = 50                                  {product}
    uintx ParallelOldDeadWoodLimiterStdDev          = 80                                  {product}
     bool ParallelRefProcBalancingEnabled           = true                                {product}
     bool ParallelRefProcEnabled                    = false                               {product}
     bool PartialPeelAtUnsignedTests                = true                                {C2 product}
     bool PartialPeelLoop                           = true                                {C2 product}
     intx PartialPeelNewPhiDelta                    = 0                                   {C2 product}
    uintx PausePadding                              = 1                                   {product}
     intx PerBytecodeRecompilationCutoff            = 200                                 {product}
     intx PerBytecodeTrapLimit                      = 4                                   {product}
     intx PerMethodRecompilationCutoff              = 400                                 {product}
     intx PerMethodTrapLimit                        = 100                                 {product}
     bool PerfAllowAtExitRegistration               = false                               {product}
     bool PerfBypassFileSystemCheck                 = false                               {product}
     intx PerfDataMemorySize                        = 32768                               {product}
     intx PerfDataSamplingInterval                  = 50                                  {product}
    ccstr PerfDataSaveFile                          =                                     {product}
     bool PerfDataSaveToFile                        = false                               {product}
     bool PerfDisableSharedMem                      = false                               {product}
     intx PerfMaxStringConstLength                  = 1024                                {product}
     intx PreInflateSpin                            = 10                                  {pd product}
     bool PreferContainerQuotaForCPUCount           = true                                {product}
     bool PreferInterpreterNativeStubs              = false                               {pd product}
     intx PrefetchCopyIntervalInBytes               = 576                                 {product}
     intx PrefetchFieldsAhead                       = 1                                   {product}
     intx PrefetchScanIntervalInBytes               = 576                                 {product}
     bool PreserveAllAnnotations                    = false                               {product}
     bool PreserveFramePointer                      = false                               {pd product}
    uintx PretenureSizeThreshold                    = 0                                   {product}
     bool PrintAdaptiveSizePolicy                   = false                               {product}
     bool PrintCMSInitiationStatistics              = false                               {product}
     intx PrintCMSStatistics                        = 0                                   {product}
     bool PrintClassHistogram                       = false                               {manageable}
     bool PrintClassHistogramAfterFullGC            = false                               {manageable}
     bool PrintClassHistogramBeforeFullGC           = false                               {manageable}
     bool PrintCodeCache                            = false                               {product}
     bool PrintCodeCacheOnCompilation               = false                               {product}
     bool PrintCommandLineFlags                     = false                               {product}
     bool PrintCompilation                          = false                               {product}
     bool PrintConcurrentLocks                      = false                               {manageable}
     intx PrintFLSCensus                            = 0                                   {product}
     intx PrintFLSStatistics                        = 0                                   {product}
     bool PrintFlagsFinal                          := true                                {product}
     bool PrintFlagsInitial                         = false                               {product}
     bool PrintGC                                   = false                               {manageable}
     bool PrintGCApplicationConcurrentTime          = false                               {product}
     bool PrintGCApplicationStoppedTime             = false                               {product}
     bool PrintGCCause                              = true                                {product}
     bool PrintGCDateStamps                         = false                               {manageable}
     bool PrintGCDetails                            = false                               {manageable}
     bool PrintGCID                                 = false                               {manageable}
     bool PrintGCTaskTimeStamps                     = false                               {product}
     bool PrintGCTimeStamps                         = false                               {manageable}
     bool PrintHeapAtGC                             = false                               {product rw}
     bool PrintHeapAtGCExtended                     = false                               {product rw}
     bool PrintHeapAtSIGBREAK                       = true                                {product}
     bool PrintJNIGCStalls                          = false                               {product}
     bool PrintJNIResolving                         = false                               {product}
     bool PrintOldPLAB                              = false                               {product}
     bool PrintOopAddress                           = false                               {product}
     bool PrintPLAB                                 = false                               {product}
     bool PrintParallelOldGCPhaseTimes              = false                               {product}
     bool PrintPromotionFailure                     = false                               {product}
     bool PrintReferenceGC                          = false                               {product}
     bool PrintSafepointStatistics                  = false                               {product}
     intx PrintSafepointStatisticsCount             = 300                                 {product}
     intx PrintSafepointStatisticsTimeout           = -1                                  {product}
     bool PrintSharedArchiveAndExit                 = false                               {product}
     bool PrintSharedDictionary                     = false                               {product}
     bool PrintSharedSpaces                         = false                               {product}
     bool PrintStringDeduplicationStatistics        = false                               {product}
     bool PrintStringTableStatistics                = false                               {product}
     bool PrintTLAB                                 = false                               {product}
     bool PrintTenuringDistribution                 = false                               {product}
     bool PrintTieredEvents                         = false                               {product}
     bool PrintVMOptions                            = false                               {product}
     bool PrintVMQWaitTime                          = false                               {product}
     bool PrintWarnings                             = true                                {product}
    uintx ProcessDistributionStride                 = 4                                   {product}
     bool ProfileInterpreter                        = true                                {pd product}
     bool ProfileIntervals                          = false                               {product}
     intx ProfileIntervalsTicks                     = 100                                 {product}
     intx ProfileMaturityPercentage                 = 20                                  {product}
     bool ProfileVM                                 = false                               {product}
     bool ProfilerPrintByteCodeStatistics           = false                               {product}
     bool ProfilerRecordPC                          = false                               {product}
    uintx PromotedPadding                           = 3                                   {product}
    uintx QueuedAllocationWarningCount              = 0                                   {product}
    uintx RTMRetryCount                             = 5                                   {ARCH product}
     bool RangeCheckElimination                     = true                                {product}
     intx ReadPrefetchInstr                         = 0                                   {ARCH product}
     bool ReassociateInvariants                     = true                                {C2 product}
     bool ReduceBulkZeroing                         = true                                {C2 product}
     bool ReduceFieldZeroing                        = true                                {C2 product}
     bool ReduceInitialCardMarks                    = true                                {C2 product}
     bool ReduceSignalUsage                         = false                               {product}
     intx RefDiscoveryPolicy                        = 0                                   {product}
     bool ReflectionWrapResolutionErrors            = true                                {product}
     bool RegisterFinalizersAtInit                  = true                                {product}
     bool RelaxAccessControlCheck                   = false                               {product}
    ccstr ReplayDataFile                            =                                     {product}
     bool RequireSharedSpaces                       = false                               {product}
    uintx ReservedCodeCacheSize                     = 251658240                           {pd product}
     bool ResizeOldPLAB                             = true                                {product}
     bool ResizePLAB                                = true                                {product}
     bool ResizeTLAB                                = true                                {pd product}
     bool RestoreMXCSROnJNICalls                    = false                               {product}
     bool RestrictContended                         = true                                {product}
     bool RewriteBytecodes                          = true                                {pd product}
     bool RewriteFrequentPairs                      = true                                {pd product}
     intx SafepointPollOffset                       = 256                                 {C1 pd product}
     intx SafepointSpinBeforeYield                  = 2000                                {product}
     bool SafepointTimeout                          = false                               {product}
     intx SafepointTimeoutDelay                     = 10000                               {product}
     bool ScavengeBeforeFullGC                      = true                                {product}
     intx SelfDestructTimer                         = 0                                   {product}
    uintx SharedBaseAddress                         = 34359738368                         {product}
    ccstr SharedClassListFile                       =                                     {product}
    uintx SharedMiscCodeSize                        = 122880                              {product}
    uintx SharedMiscDataSize                        = 4194304                             {product}
    uintx SharedReadOnlySize                        = 16777216                            {product}
    uintx SharedReadWriteSize                       = 16777216                            {product}
     bool ShowMessageBoxOnError                     = false                               {product}
     intx SoftRefLRUPolicyMSPerMB                   = 1000                                {product}
     bool SpecialEncodeISOArray                     = true                                {C2 product}
     bool SplitIfBlocks                             = true                                {C2 product}
     intx StackRedPages                             = 1                                   {pd product}
     intx StackShadowPages                          = 20                                  {pd product}
     bool StackTraceInThrowable                     = true                                {product}
     intx StackYellowPages                          = 2                                   {pd product}
     bool StartAttachListener                       = false                               {product}
    ccstr StartFlightRecording                      =                                     {product}
     intx StarvationMonitorInterval                 = 200                                 {product}
     bool StressLdcRewrite                          = false                               {product}
    uintx StringDeduplicationAgeThreshold           = 3                                   {product}
    uintx StringTableSize                           = 60013                               {product}
     bool SuppressFatalErrorMessage                 = false                               {product}
    uintx SurvivorPadding                           = 3                                   {product}
    uintx SurvivorRatio                             = 8                                   {product}
     intx SuspendRetryCount                         = 50                                  {product}
     intx SuspendRetryDelay                         = 5                                   {product}
     intx SyncFlags                                 = 0                                   {product}
    ccstr SyncKnobs                                 =                                     {product}
     intx SyncVerbose                               = 0                                   {product}
    uintx TLABAllocationWeight                      = 35                                  {product}
    uintx TLABRefillWasteFraction                   = 64                                  {product}
    uintx TLABSize                                  = 0                                   {product}
     bool TLABStats                                 = true                                {product}
    uintx TLABWasteIncrement                        = 4                                   {product}
    uintx TLABWasteTargetPercent                    = 1                                   {product}
    uintx TargetPLABWastePct                        = 10                                  {product}
    uintx TargetSurvivorRatio                       = 50                                  {product}
    uintx TenuredGenerationSizeIncrement            = 20                                  {product}
    uintx TenuredGenerationSizeSupplement           = 80                                  {product}
    uintx TenuredGenerationSizeSupplementDecay      = 2                                   {product}
     intx ThreadPriorityPolicy                      = 0                                   {product}
     bool ThreadPriorityVerbose                     = false                               {product}
    uintx ThreadSafetyMargin                        = 52428800                            {product}
     intx ThreadStackSize                          := 131072                              {pd product}
    uintx ThresholdTolerance                        = 10                                  {product}
     intx Tier0BackedgeNotifyFreqLog                = 10                                  {product}
     intx Tier0InvokeNotifyFreqLog                  = 7                                   {product}
     intx Tier0ProfilingStartPercentage             = 200                                 {product}
     intx Tier23InlineeNotifyFreqLog                = 20                                  {product}
     intx Tier2BackEdgeThreshold                    = 0                                   {product}
     intx Tier2BackedgeNotifyFreqLog                = 14                                  {product}
     intx Tier2CompileThreshold                     = 0                                   {product}
     intx Tier2InvokeNotifyFreqLog                  = 11                                  {product}
     intx Tier3BackEdgeThreshold                    = 60000                               {product}
     intx Tier3BackedgeNotifyFreqLog                = 13                                  {product}
     intx Tier3CompileThreshold                     = 2000                                {product}
     intx Tier3DelayOff                             = 2                                   {product}
     intx Tier3DelayOn                              = 5                                   {product}
     intx Tier3InvocationThreshold                  = 200                                 {product}
     intx Tier3InvokeNotifyFreqLog                  = 10                                  {product}
     intx Tier3LoadFeedback                         = 5                                   {product}
     intx Tier3MinInvocationThreshold               = 100                                 {product}
     intx Tier4BackEdgeThreshold                    = 40000                               {product}
     intx Tier4CompileThreshold                     = 15000                               {product}
     intx Tier4InvocationThreshold                  = 5000                                {product}
     intx Tier4LoadFeedback                         = 3                                   {product}
     intx Tier4MinInvocationThreshold               = 600                                 {product}
     bool TieredCompilation                         = true                                {pd product}
     intx TieredCompileTaskTimeout                  = 50                                  {product}
     intx TieredRateUpdateMaxTime                   = 25                                  {product}
     intx TieredRateUpdateMinTime                   = 1                                   {product}
     intx TieredStopAtLevel                         = 4                                   {product}
     bool TimeLinearScan                            = false                               {C1 product}
     bool TraceBiasedLocking                        = false                               {product}
     bool TraceClassLoading                         = false                               {product rw}
     bool TraceClassLoadingPreorder                 = false                               {product}
     bool TraceClassPaths                           = false                               {product}
     bool TraceClassResolution                      = false                               {product}
     bool TraceClassUnloading                       = false                               {product rw}
     bool TraceDynamicGCThreads                     = false                               {product}
     bool TraceExceptions                           = false                               {product}
     bool TraceGen0Time                             = false                               {product}
     bool TraceGen1Time                             = false                               {product}
    ccstr TraceJVMTI                                =                                     {product}
     bool TraceLoaderConstraints                    = false                               {product rw}
     bool TraceMetadataHumongousAllocation          = false                               {product}
     bool TraceMonitorInflation                     = false                               {product}
     bool TraceParallelOldGCTasks                   = false                               {product}
     intx TraceRedefineClasses                      = 0                                   {product}
     bool TraceSafepointCleanupTime                 = false                               {product}
     bool TraceSuspendWaitFailures                  = false                               {product}
     intx TrackedInitializationLimit                = 50                                  {C2 product}
     bool TransmitErrorReport                       = false                               {product}
     bool TrapBasedNullChecks                       = false                               {pd product}
     bool TrapBasedRangeChecks                      = false                               {C2 pd product}
     intx TypeProfileArgsLimit                      = 2                                   {product}
    uintx TypeProfileLevel                          = 111                                 {pd product}
     intx TypeProfileMajorReceiverPercent           = 90                                  {C2 product}
     intx TypeProfileParmsLimit                     = 2                                   {product}
     intx TypeProfileWidth                          = 2                                   {product}
     intx UnguardOnExecutionViolation               = 0                                   {product}
     bool UnlinkSymbolsALot                         = false                               {product}
     bool UnlockCommercialFeatures                  = false                               {product}
     bool Use486InstrsOnly                          = false                               {ARCH product}
     bool UseAES                                    = true                                {product}
     bool UseAESIntrinsics                          = true                                {product}
     intx UseAVX                                    = 2                                   {ARCH product}
     bool UseAdaptiveGCBoundary                     = false                               {product}
     bool UseAdaptiveGenerationSizePolicyAtMajorCollection  = true                                {product}
     bool UseAdaptiveGenerationSizePolicyAtMinorCollection  = true                                {product}
     bool UseAdaptiveNUMAChunkSizing                = true                                {product}
     bool UseAdaptiveSizeDecayMajorGCCost           = true                                {product}
     bool UseAdaptiveSizePolicy                     = true                                {product}
     bool UseAdaptiveSizePolicyFootprintGoal        = true                                {product}
     bool UseAdaptiveSizePolicyWithSystemGC         = false                               {product}
     bool UseAddressNop                             = true                                {ARCH product}
     bool UseAltSigs                                = false                               {product}
     bool UseAutoGCSelectPolicy                     = false                               {product}
     bool UseBMI1Instructions                       = true                                {ARCH product}
     bool UseBMI2Instructions                       = true                                {ARCH product}
     bool UseBiasedLocking                          = true                                {product}
     bool UseBimorphicInlining                      = true                                {C2 product}
     bool UseBoundThreads                           = true                                {product}
     bool UseCLMUL                                  = true                                {ARCH product}
     bool UseCMSBestFit                             = true                                {product}
     bool UseCMSCollectionPassing                   = true                                {product}
     bool UseCMSCompactAtFullCollection             = true                                {product}
     bool UseCMSInitiatingOccupancyOnly             = false                               {product}
     bool UseCRC32Intrinsics                        = true                                {product}
     bool UseCodeCacheFlushing                      = true                                {product}
     bool UseCompiler                               = true                                {product}
     bool UseCompilerSafepoints                     = true                                {product}
     bool UseCompressedClassPointers               := true                                {lp64_product}
     bool UseCompressedOops                        := true                                {lp64_product}
     bool UseConcMarkSweepGC                        = false                               {product}
     bool UseCondCardMark                           = false                               {C2 product}
     bool UseContainerSupport                       = true                                {product}
     bool UseCountLeadingZerosInstruction           = true                                {ARCH product}
     bool UseCountTrailingZerosInstruction          = true                                {ARCH product}
     bool UseCountedLoopSafepoints                  = false                               {C2 product}
     bool UseCounterDecay                           = true                                {product}
     bool UseDivMod                                 = true                                {C2 product}
     bool UseDynamicNumberOfGCThreads               = false                               {product}
     bool UseFPUForSpilling                         = true                                {C2 product}
     bool UseFastAccessorMethods                    = false                               {product}
     bool UseFastEmptyMethods                       = false                               {product}
     bool UseFastJNIAccessors                       = true                                {product}
     bool UseFastStosb                              = true                                {ARCH product}
     bool UseG1GC                                  := true                                {product}
     bool UseGCLogFileRotation                      = false                               {product}
     bool UseGCOverheadLimit                        = true                                {product}
     bool UseGCTaskAffinity                         = false                               {product}
     bool UseGHASHIntrinsics                        = true                                {product}
     bool UseHeavyMonitors                          = false                               {product}
     bool UseHugeTLBFS                              = false                               {product}
     bool UseInlineCaches                           = true                                {product}
     bool UseInterpreter                            = true                                {product}
     bool UseJumpTables                             = true                                {C2 product}
     bool UseLWPSynchronization                     = true                                {product}
     bool UseLargePages                             = false                               {pd product}
     bool UseLargePagesInMetaspace                  = false                               {product}
     bool UseLargePagesIndividualAllocation         = false                               {pd product}
     bool UseLegacyJNINameEscaping                  = false                               {product}
     bool UseLinuxPosixThreadCPUClocks              = true                                {product}
     bool UseLockedTracing                          = false                               {product}
     bool UseLoopCounter                            = true                                {product}
     bool UseLoopInvariantCodeMotion                = true                                {C1 product}
     bool UseLoopPredicate                          = true                                {C2 product}
     bool UseMathExactIntrinsics                    = true                                {C2 product}
     bool UseMaximumCompactionOnSystemGC            = true                                {product}
     bool UseMembar                                 = false                               {pd product}
     bool UseMontgomeryMultiplyIntrinsic            = true                                {C2 product}
     bool UseMontgomerySquareIntrinsic              = true                                {C2 product}
     bool UseMulAddIntrinsic                        = true                                {C2 product}
     bool UseMultiplyToLenIntrinsic                 = true                                {C2 product}
     bool UseNUMA                                   = false                               {product}
     bool UseNUMAInterleaving                       = false                               {product}
     bool UseNewLongLShift                          = false                               {ARCH product}
     bool UseOSErrorReporting                       = false                               {pd product}
     bool UseOnStackReplacement                     = true                                {pd product}
     bool UseOnlyInlinedBimorphic                   = true                                {C2 product}
     bool UseOprofile                               = false                               {product}
     bool UseOptoBiasInlining                       = true                                {C2 product}
     bool UsePSAdaptiveSurvivorSizePolicy           = true                                {product}
     bool UseParNewGC                               = false                               {product}
     bool UseParallelGC                             = false                               {product}
     bool UseParallelOldGC                          = false                               {product}
     bool UsePerfData                               = true                                {product}
     bool UsePopCountInstruction                    = true                                {product}
     bool UseRDPCForConstantTableBase               = false                               {C2 product}
     bool UseRTMDeopt                               = false                               {ARCH product}
     bool UseRTMLocking                             = false                               {ARCH product}
     bool UseSHA                                    = false                               {product}
     bool UseSHA1Intrinsics                         = false                               {product}
     bool UseSHA256Intrinsics                       = false                               {product}
     bool UseSHA512Intrinsics                       = false                               {product}
     bool UseSHM                                    = false                               {product}
     intx UseSSE                                    = 4                                   {product}
     bool UseSSE42Intrinsics                        = true                                {product}
     bool UseSerialGC                               = false                               {product}
     bool UseSharedSpaces                           = false                               {product}
     bool UseSignalChaining                         = true                                {product}
     bool UseSquareToLenIntrinsic                   = true                                {C2 product}
     bool UseStoreImmI16                            = false                               {ARCH product}
     bool UseStringDeduplication                    = false                               {product}
     bool UseSuperWord                              = true                                {C2 product}
     bool UseTLAB                                   = true                                {pd product}
     bool UseThreadPriorities                       = true                                {pd product}
     bool UseTransparentHugePages                   = false                               {product}
     bool UseTypeProfile                            = true                                {product}
     bool UseTypeSpeculation                        = true                                {C2 product}
     bool UseUnalignedLoadStores                    = true                                {ARCH product}
     bool UseVMInterruptibleIO                      = false                               {product}
     bool UseXMMForArrayCopy                        = true                                {product}
     bool UseXmmI2D                                 = false                               {ARCH product}
     bool UseXmmI2F                                 = false                               {ARCH product}
     bool UseXmmLoadAndClearUpper                   = true                                {ARCH product}
     bool UseXmmRegToRegMoveAll                     = true                                {ARCH product}
     bool VMThreadHintNoPreempt                     = false                               {product}
     intx VMThreadPriority                          = -1                                  {product}
     intx VMThreadStackSize                         = 1024                                {pd product}
     intx ValueMapInitialSize                       = 11                                  {C1 product}
     intx ValueMapMaxLoopSize                       = 8                                   {C1 product}
     intx ValueSearchLimit                          = 1000                                {C2 product}
     bool VerifyMergedCPBytecodes                   = true                                {product}
     bool VerifySharedSpaces                        = false                               {product}
     intx WorkAroundNPTLTimedWaitHang               = 1                                   {product}
    uintx YoungGenerationSizeIncrement              = 20                                  {product}
    uintx YoungGenerationSizeSupplement             = 80                                  {product}
    uintx YoungGenerationSizeSupplementDecay        = 8                                   {product}
    uintx YoungPLABSize                             = 4096                                {product}
     bool ZeroTLAB                                  = false                               {product}
     intx hashCode                                  = 5                                   {product}
VM settings:
    Stack Size: 128.00M
    Max. Heap Size (Estimated): 7.77G
    Ergonomics Machine Class: server
    Using VM: OpenJDK 64-Bit Server VM

Property settings:
    awt.toolkit = sun.awt.X11.XToolkit
    awt.useSystemAAFontSettings = on
    file.encoding = UTF-8
    file.encoding.pkg = sun.io
    file.separator = /
    java.awt.graphicsenv = sun.awt.X11GraphicsEnvironment
    java.awt.printerjob = sun.print.PSPrinterJob
    java.class.path = /home/davis/.jdks/corretto-1.8.0_402/jre/lib/charsets.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/cldrdata.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/dnsns.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/jaccess.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/jfxrt.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/localedata.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/nashorn.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/sunec.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/sunjce_provider.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/sunpkcs11.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext/zipfs.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/jce.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/jfr.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/jfxswt.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/jsse.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/management-agent.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/resources.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/rt.jar
        /home/davis/Work/zxf-java-memory/target/classes
        /home/davis/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.6.8/spring-boot-starter-web-2.6.8.jar
        /home/davis/.m2/repository/org/springframework/boot/spring-boot-starter/2.6.8/spring-boot-starter-2.6.8.jar
        /home/davis/.m2/repository/org/springframework/boot/spring-boot/2.6.8/spring-boot-2.6.8.jar
        /home/davis/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.6.8/spring-boot-autoconfigure-2.6.8.jar
        /home/davis/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.6.8/spring-boot-starter-logging-2.6.8.jar
        /home/davis/.m2/repository/ch/qos/logback/logback-classic/1.2.11/logback-classic-1.2.11.jar
        /home/davis/.m2/repository/ch/qos/logback/logback-core/1.2.11/logback-core-1.2.11.jar
        /home/davis/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar
        /home/davis/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar
        /home/davis/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar
        /home/davis/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar
        /home/davis/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar
        /home/davis/.m2/repository/org/springframework/spring-core/5.3.20/spring-core-5.3.20.jar
        /home/davis/.m2/repository/org/springframework/spring-jcl/5.3.20/spring-jcl-5.3.20.jar
        /home/davis/.m2/repository/org/yaml/snakeyaml/1.29/snakeyaml-1.29.jar
        /home/davis/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.6.8/spring-boot-starter-json-2.6.8.jar
        /home/davis/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar
        /home/davis/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar
        /home/davis/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar
        /home/davis/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.3/jackson-datatype-jdk8-2.13.3.jar
        /home/davis/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.3/jackson-datatype-jsr310-2.13.3.jar
        /home/davis/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.3/jackson-module-parameter-names-2.13.3.jar
        /home/davis/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.6.8/spring-boot-starter-tomcat-2.6.8.jar
        /home/davis/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.63/tomcat-embed-core-9.0.63.jar
        /home/davis/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.63/tomcat-embed-el-9.0.63.jar
        /home/davis/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.63/tomcat-embed-websocket-9.0.63.jar
        /home/davis/.m2/repository/org/springframework/spring-web/5.3.20/spring-web-5.3.20.jar
        /home/davis/.m2/repository/org/springframework/spring-beans/5.3.20/spring-beans-5.3.20.jar
        /home/davis/.m2/repository/org/springframework/spring-webmvc/5.3.20/spring-webmvc-5.3.20.jar
        /home/davis/.m2/repository/org/springframework/spring-aop/5.3.20/spring-aop-5.3.20.jar
        /home/davis/.m2/repository/org/springframework/spring-context/5.3.20/spring-context-5.3.20.jar
        /home/davis/.m2/repository/org/springframework/spring-expression/5.3.20/spring-expression-5.3.20.jar
        /home/davis/.m2/repository/org/apache/pdfbox/pdfbox/2.0.29/pdfbox-2.0.29.jar
        /home/davis/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar
        /home/davis/.m2/repository/org/apache/pdfbox/fontbox/2.0.29/fontbox-2.0.29.jar
        /home/davis/.m2/repository/com/oracle/database/jdbc/ojdbc8/23.4.0.24.05/ojdbc8-23.4.0.24.05.jar
        /home/davis/.m2/repository/com/oracle/database/jdbc/ucp/23.4.0.24.05/ucp-23.4.0.24.05.jar
        /home/davis/.m2/repository/com/oracle/database/ha/ons/23.4.0.24.05/ons-23.4.0.24.05.jar
        /home/davis/.m2/repository/commons-io/commons-io/2.5/commons-io-2.5.jar
        /home/davis/.m2/repository/org/openjdk/jol/jol-core/0.17/jol-core-0.17.jar
        /home/davis/Apps/idea-IC/lib/idea_rt.jar
    java.class.version = 52.0
    java.endorsed.dirs = /home/davis/.jdks/corretto-1.8.0_402/jre/lib/endorsed
    java.ext.dirs = /home/davis/.jdks/corretto-1.8.0_402/jre/lib/ext
        /usr/java/packages/lib/ext
    java.home = /home/davis/.jdks/corretto-1.8.0_402/jre
    java.io.tmpdir = /tmp
    java.library.path = /usr/java/packages/lib/amd64
        /usr/lib64
        /lib64
        /lib
        /usr/lib
    java.runtime.name = OpenJDK Runtime Environment
    java.runtime.version = 1.8.0_402-b08
    java.specification.maintenance.version = 5
    java.specification.name = Java Platform API Specification
    java.specification.vendor = Oracle Corporation
    java.specification.version = 1.8
    java.vendor = Amazon.com Inc.
    java.vendor.url = https://aws.amazon.com/corretto/
    java.vendor.url.bug = https://github.com/corretto/corretto-8/issues/
    java.version = 1.8.0_402
    java.vm.info = mixed mode
    java.vm.name = OpenJDK 64-Bit Server VM
    java.vm.specification.name = Java Virtual Machine Specification
    java.vm.specification.vendor = Oracle Corporation
    java.vm.specification.version = 1.8
    java.vm.vendor = Amazon.com Inc.
    java.vm.version = 25.402-b08
    line.separator = \n
    os.arch = amd64
    os.name = Linux
    os.version = 6.6.15-amd64
    path.separator = :
    sun.arch.data.model = 64
    sun.boot.class.path = /home/davis/.jdks/corretto-1.8.0_402/jre/lib/resources.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/rt.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/sunrsasign.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/jsse.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/jce.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/charsets.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/lib/jfr.jar
        /home/davis/.jdks/corretto-1.8.0_402/jre/classes
    sun.boot.library.path = /home/davis/.jdks/corretto-1.8.0_402/jre/lib/amd64
    sun.cpu.endian = little
    sun.cpu.isalist =
    sun.io.unicode.encoding = UnicodeLittle
    sun.java.command = zxf.java.memory.oom.TestThreadStackSpaceOOM
    sun.java.launcher = SUN_STANDARD
    sun.jnu.encoding = UTF-8
    sun.management.compiler = HotSpot 64-Bit Tiered Compilers
    sun.os.patch.level = unknown
    swing.aatext = true
    user.dir = /home/davis/Work/zxf-java-memory
    user.home = /home/davis
    user.language = en
    user.name = davis
    user.timezone =

Locale settings:
    default locale = English
    default display locale = English
    default format locale = English
    available locales = , ar, ar_AE, ar_BH, ar_DZ, ar_EG, ar_IQ, ar_JO,
        ar_KW, ar_LB, ar_LY, ar_MA, ar_OM, ar_QA, ar_SA, ar_SD,
        ar_SY, ar_TN, ar_YE, be, be_BY, bg, bg_BG, ca,
        ca_ES, cs, cs_CZ, da, da_DK, de, de_AT, de_CH,
        de_DE, de_GR, de_LU, el, el_CY, el_GR, en, en_AU,
        en_CA, en_GB, en_IE, en_IN, en_MT, en_NZ, en_PH, en_SG,
        en_US, en_ZA, es, es_AR, es_BO, es_CL, es_CO, es_CR,
        es_CU, es_DO, es_EC, es_ES, es_GT, es_HN, es_MX, es_NI,
        es_PA, es_PE, es_PR, es_PY, es_SV, es_US, es_UY, es_VE,
        et, et_EE, fi, fi_FI, fr, fr_BE, fr_CA, fr_CH,
        fr_FR, fr_LU, ga, ga_IE, hi, hi_IN, hr, hr_HR,
        hu, hu_HU, in, in_ID, is, is_IS, it, it_CH,
        it_IT, iw, iw_IL, ja, ja_JP, ja_JP_JP_#u-ca-japanese, ko, ko_KR,
        lt, lt_LT, lv, lv_LV, mk, mk_MK, ms, ms_MY,
        mt, mt_MT, nl, nl_BE, nl_NL, no, no_NO, no_NO_NY,
        pl, pl_PL, pt, pt_BR, pt_PT, ro, ro_RO, ru,
        ru_RU, sk, sk_SK, sl, sl_SI, sq, sq_AL, sr,
        sr_BA, sr_BA_#Latn, sr_CS, sr_ME, sr_ME_#Latn, sr_RS, sr_RS_#Latn, sr__#Latn,
        sv, sv_SE, th, th_TH, th_TH_TH_#u-nu-thai, tr, tr_TR, uk,
        uk_UA, vi, vi_VN, zh, zh_CN, zh_HK, zh_SG, zh_TW

Operating System Metrics:
    Provider: cgroupv2
    Effective CPU Count: 20
    CPU Period: 100000us
    CPU Quota: -1
    CPU Shares: -1
    List of Processors: N/A
    List of Effective Processors: N/A
    List of Memory Nodes: N/A
    List of Available Memory Nodes: N/A
    Memory Limit: Unlimited
    Memory Soft Limit: 0.00K
    Memory & Swap Limit: Unlimited

Call jcmd 627334 VM.native_memory summary scale=MB for for stack space.begin
Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
627334:

Native Memory Tracking:

Total: reserved=10722MB, committed=1705MB
-                 Java Heap (reserved=7958MB, committed=498MB)
                            (mmap: reserved=7958MB, committed=498MB)

-                     Class (reserved=1032MB, committed=7MB)
                            (classes #1084)
                            (mmap: reserved=1032MB, committed=7MB)

-                    Thread (reserved=1074MB, committed=1074MB)
                            (thread #60)
                            (stack: reserved=1074MB, committed=1074MB)

-                      Code (reserved=244MB, committed=4MB)
                            (mmap: reserved=244MB, committed=4MB)

-                        GC (reserved=360MB, committed=83MB)
                            (malloc=32MB #1934)
                            (mmap: reserved=327MB, committed=50MB)

-                  Internal (reserved=32MB, committed=32MB)
                            (malloc=32MB #3173)

-                    Symbol (reserved=2MB, committed=2MB)
                            (malloc=1MB #554)
                            (arena=1MB #1)

-               Arena Chunk (reserved=3MB, committed=3MB)
                            (malloc=3MB)

-                   Unknown (reserved=16MB, committed=0MB)
                            (mmap: reserved=16MB, committed=0MB)

Call jcmd 627334 VM.native_memory summary scale=MB return with code 0
Heap usage for for stack space.begin: max=7.8 GB, commit=498.0 MB, used=10.0 MB, free=488.0 MB, init=498.0 MB
Non-Heap usage for for stack space.begin: max=-1 B, commit=11.6 MB, used=11.0 MB, free=659.6 KB, init=2.4 MB
Please press enter to start

Started
Call jcmd 627334 VM.native_memory summary scale=MB for for stack space....0
Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
627334:

Native Memory Tracking:

Total: reserved=10848MB, committed=1830MB
-                 Java Heap (reserved=7958MB, committed=498MB)
                            (mmap: reserved=7958MB, committed=498MB)

-                     Class (reserved=1032MB, committed=7MB)
                            (classes #1100)
                            (mmap: reserved=1032MB, committed=7MB)

-                    Thread (reserved=1202MB, committed=1202MB)
                            (thread #61)
                            (stack: reserved=1202MB, committed=1202MB)

-                      Code (reserved=244MB, committed=4MB)
                            (mmap: reserved=244MB, committed=4MB)

-                        GC (reserved=360MB, committed=83MB)
                            (malloc=32MB #1939)
                            (mmap: reserved=327MB, committed=50MB)

-                  Internal (reserved=32MB, committed=32MB)
                            (malloc=32MB #3207)

-                    Symbol (reserved=2MB, committed=2MB)
                            (malloc=1MB #555)
                            (arena=1MB #1)

-               Arena Chunk (reserved=1MB, committed=1MB)
                            (malloc=1MB)

-                   Unknown (reserved=16MB, committed=0MB)
                            (mmap: reserved=16MB, committed=0MB)

Call jcmd 627334 VM.native_memory summary scale=MB return with code 0
Heap usage for for stack space....0: max=7.8 GB, commit=498.0 MB, used=10.0 MB, free=488.0 MB, init=498.0 MB
Non-Heap usage for for stack space....0: max=-1 B, commit=11.7 MB, used=11.0 MB, free=668.0 KB, init=2.4 MB
..... 1000
..... 2000
..... 3000
..... 4000
..... 5000
Call jcmd 627334 VM.native_memory summary scale=MB for for stack space....5000
Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
627334:

Native Memory Tracking:

Total: reserved=650889MB, committed=641872MB
-                 Java Heap (reserved=7958MB, committed=498MB)
                            (mmap: reserved=7958MB, committed=498MB)

-                     Class (reserved=1032MB, committed=7MB)
                            (classes #1100)
                            (mmap: reserved=1032MB, committed=7MB)

-                    Thread (reserved=641225MB, committed=641225MB)
                            (thread #5061)
                            (stack: reserved=641202MB, committed=641202MB)
                            (malloc=17MB #30360)
                            (arena=6MB #10109)

-                      Code (reserved=244MB, committed=4MB)
                            (mmap: reserved=244MB, committed=4MB)

-                        GC (reserved=360MB, committed=83MB)
                            (malloc=32MB #1973)
                            (mmap: reserved=327MB, committed=50MB)

-                  Internal (reserved=49MB, committed=49MB)
                            (malloc=49MB #58208)

-                    Symbol (reserved=2MB, committed=2MB)
                            (malloc=1MB #555)
                            (arena=1MB #1)

-    Native Memory Tracking (reserved=2MB, committed=2MB)
                            (malloc=1MB #6833)
                            (tracking overhead=2MB)

-               Arena Chunk (reserved=1MB, committed=1MB)
                            (malloc=1MB)

-                   Unknown (reserved=16MB, committed=0MB)
                            (mmap: reserved=16MB, committed=0MB)

Call jcmd 627334 VM.native_memory summary scale=MB return with code 0
Heap usage for for stack space....5000: max=7.8 GB, commit=498.0 MB, used=14.0 MB, free=484.0 MB, init=498.0 MB
Non-Heap usage for for stack space....5000: max=-1 B, commit=11.9 MB, used=11.2 MB, free=671.0 KB, init=2.4 MB
..... 6000
..... 7000
..... 8000
..... 9000
..... 10000
Call jcmd 627334 VM.native_memory summary scale=MB for for stack space....10000
Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
627334:

Native Memory Tracking:

Total: reserved=1290935MB, committed=1281918MB
-                 Java Heap (reserved=7958MB, committed=498MB)
                            (mmap: reserved=7958MB, committed=498MB)

-                     Class (reserved=1032MB, committed=7MB)
                            (classes #1100)
                            (mmap: reserved=1032MB, committed=7MB)

-                    Thread (reserved=1281247MB, committed=1281247MB)
                            (thread #10061)
                            (stack: reserved=1281202MB, committed=1281202MB)
                            (malloc=34MB #60360)
                            (arena=12MB #20109)

-                      Code (reserved=244MB, committed=5MB)
                            (mmap: reserved=244MB, committed=4MB)

-                        GC (reserved=360MB, committed=83MB)
                            (malloc=32MB #1988)
                            (mmap: reserved=327MB, committed=50MB)

-                  Internal (reserved=66MB, committed=66MB)
                            (malloc=66MB #113209)

-                    Symbol (reserved=2MB, committed=2MB)
                            (malloc=1MB #555)
                            (arena=1MB #1)

-    Native Memory Tracking (reserved=4MB, committed=4MB)
                            (malloc=1MB #11938)
                            (tracking overhead=3MB)

-               Arena Chunk (reserved=5MB, committed=5MB)
                            (malloc=5MB)

-                   Unknown (reserved=16MB, committed=0MB)
                            (mmap: reserved=16MB, committed=0MB)

Call jcmd 627334 VM.native_memory summary scale=MB return with code 0
Heap usage for for stack space....10000: max=7.8 GB, commit=498.0 MB, used=20.0 MB, free=478.0 MB, init=498.0 MB
Non-Heap usage for for stack space....10000: max=-1 B, commit=11.9 MB, used=11.3 MB, free=690.9 KB, init=2.4 MB
..... 11000
..... 12000
..... 13000
..... 14000
..... 15000
Call jcmd 627334 VM.native_memory summary scale=MB for for stack space....15000
Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
627334:

Native Memory Tracking:

Total: reserved=1930977MB, committed=1921960MB
-                 Java Heap (reserved=7958MB, committed=498MB)
                            (mmap: reserved=7958MB, committed=498MB)

-                     Class (reserved=1033MB, committed=8MB)
                            (classes #1100)
                            (malloc=1MB #16038)
                            (mmap: reserved=1032MB, committed=7MB)

-                    Thread (reserved=1921270MB, committed=1921270MB)
                            (thread #15061)
                            (stack: reserved=1921202MB, committed=1921202MB)
                            (malloc=51MB #90360)
                            (arena=17MB #30109)

-                      Code (reserved=244MB, committed=5MB)
                            (mmap: reserved=244MB, committed=4MB)

-                        GC (reserved=360MB, committed=83MB)
                            (malloc=33MB #1961)
                            (mmap: reserved=327MB, committed=50MB)

-                  Internal (reserved=82MB, committed=82MB)
                            (malloc=82MB #168244)

-                    Symbol (reserved=2MB, committed=2MB)
                            (malloc=1MB #555)
                            (arena=1MB #1)

-    Native Memory Tracking (reserved=6MB, committed=6MB)
                            (malloc=2MB #16982)
                            (tracking overhead=5MB)

-               Arena Chunk (reserved=5MB, committed=5MB)
                            (malloc=5MB)

-                   Unknown (reserved=16MB, committed=0MB)
                            (mmap: reserved=16MB, committed=0MB)

Call jcmd 627334 VM.native_memory summary scale=MB return with code 0
Heap usage for for stack space....15000: max=7.8 GB, commit=498.0 MB, used=8.7 MB, free=489.3 MB, init=498.0 MB
Non-Heap usage for for stack space....15000: max=-1 B, commit=11.9 MB, used=11.3 MB, free=666.9 KB, init=2.4 MB
..... 16000
..... 17000
..... 18000
..... 19000
..... 20000
Call jcmd 627334 VM.native_memory summary scale=MB for for stack space....20000
Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
627334:

Native Memory Tracking:

Total: reserved=2571018MB, committed=2562001MB
-                 Java Heap (reserved=7958MB, committed=498MB)
                            (mmap: reserved=7958MB, committed=498MB)

-                     Class (reserved=1033MB, committed=8MB)
                            (classes #1100)
                            (malloc=1MB #21047)
                            (mmap: reserved=1032MB, committed=7MB)

-                    Thread (reserved=2561292MB, committed=2561292MB)
                            (thread #20061)
                            (stack: reserved=2561202MB, committed=2561202MB)
                            (malloc=67MB #120360)
                            (arena=23MB #40109)

-                      Code (reserved=244MB, committed=5MB)
                            (mmap: reserved=244MB, committed=4MB)

-                        GC (reserved=360MB, committed=83MB)
                            (malloc=33MB #1962)
                            (mmap: reserved=327MB, committed=50MB)

-                  Internal (reserved=99MB, committed=99MB)
                            (malloc=99MB #223245)

-                    Symbol (reserved=2MB, committed=2MB)
                            (malloc=1MB #555)
                            (arena=1MB #1)

-    Native Memory Tracking (reserved=9MB, committed=9MB)
                            (malloc=2MB #21985)
                            (tracking overhead=7MB)

-               Arena Chunk (reserved=5MB, committed=5MB)
                            (malloc=5MB)

-                   Unknown (reserved=16MB, committed=0MB)
                            (mmap: reserved=16MB, committed=0MB)

Call jcmd 627334 VM.native_memory summary scale=MB return with code 0
Heap usage for for stack space....20000: max=7.8 GB, commit=498.0 MB, used=12.7 MB, free=485.3 MB, init=498.0 MB
Non-Heap usage for for stack space....20000: max=-1 B, commit=11.9 MB, used=11.3 MB, free=664.5 KB, init=2.4 MB
..... 21000
..... 22000
..... 23000
..... 24000
..... 25000
Call jcmd 627334 VM.native_memory summary scale=MB for for stack space....25000
Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
627334:

Native Memory Tracking:

Total: reserved=3211060MB, committed=3202043MB
-                 Java Heap (reserved=7958MB, committed=498MB)
                            (mmap: reserved=7958MB, committed=498MB)

-                     Class (reserved=1033MB, committed=8MB)
                            (classes #1100)
                            (malloc=1MB #26047)
                            (mmap: reserved=1032MB, committed=7MB)

-                    Thread (reserved=3201315MB, committed=3201315MB)
                            (thread #25061)
                            (stack: reserved=3201202MB, committed=3201202MB)
                            (malloc=84MB #150360)
                            (arena=29MB #50109)

-                      Code (reserved=244MB, committed=5MB)
                            (mmap: reserved=244MB, committed=4MB)

-                        GC (reserved=360MB, committed=83MB)
                            (malloc=33MB #1969)
                            (mmap: reserved=327MB, committed=50MB)

-                  Internal (reserved=116MB, committed=116MB)
                            (malloc=116MB #278246)

-                    Symbol (reserved=2MB, committed=2MB)
                            (malloc=1MB #555)
                            (arena=1MB #1)

-    Native Memory Tracking (reserved=11MB, committed=11MB)
                            (malloc=2MB #26985)
                            (tracking overhead=8MB)

-               Arena Chunk (reserved=6MB, committed=6MB)
                            (malloc=6MB)

-                   Unknown (reserved=16MB, committed=0MB)
                            (mmap: reserved=16MB, committed=0MB)

Call jcmd 627334 VM.native_memory summary scale=MB return with code 0
Heap usage for for stack space....25000: max=7.8 GB, commit=498.0 MB, used=14.7 MB, free=483.3 MB, init=498.0 MB
Non-Heap usage for for stack space....25000: max=-1 B, commit=11.9 MB, used=11.3 MB, free=647.4 KB, init=2.4 MB
..... 26000
..... 27000
..... 28000
..... 29000
..... 30000
Call jcmd 627334 VM.native_memory summary scale=MB for for stack space....30000
Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
627334:

Native Memory Tracking:

Total: reserved=3851097MB, committed=3842080MB
-                 Java Heap (reserved=7958MB, committed=498MB)
                            (mmap: reserved=7958MB, committed=498MB)

-                     Class (reserved=1033MB, committed=8MB)
                            (classes #1100)
                            (malloc=1MB #31046)
                            (mmap: reserved=1032MB, committed=7MB)

-                    Thread (reserved=3841338MB, committed=3841338MB)
                            (thread #30061)
                            (stack: reserved=3841202MB, committed=3841202MB)
                            (malloc=101MB #180360)
                            (arena=34MB #60109)

-                      Code (reserved=244MB, committed=5MB)
                            (mmap: reserved=244MB, committed=4MB)

-                        GC (reserved=360MB, committed=83MB)
                            (malloc=33MB #1970)
                            (mmap: reserved=327MB, committed=50MB)

-                  Internal (reserved=133MB, committed=133MB)
                            (malloc=133MB #333247)

-                    Symbol (reserved=2MB, committed=2MB)
                            (malloc=1MB #555)
                            (arena=1MB #1)

-    Native Memory Tracking (reserved=13MB, committed=13MB)
                            (malloc=3MB #31985)
                            (tracking overhead=10MB)

-               Arena Chunk (reserved=1MB, committed=1MB)
                            (malloc=1MB)

-                   Unknown (reserved=16MB, committed=0MB)
                            (mmap: reserved=16MB, committed=0MB)

Call jcmd 627334 VM.native_memory summary scale=MB return with code 0
Heap usage for for stack space....30000: max=7.8 GB, commit=498.0 MB, used=18.7 MB, free=479.3 MB, init=498.0 MB
Non-Heap usage for for stack space....30000: max=-1 B, commit=11.9 MB, used=11.3 MB, free=628.1 KB, init=2.4 MB
..... 31000
..... 32000
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 12288 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/davis/Work/zxf-java-memory/hs_err_pid627334.log
[thread 139680911718080 also had an error]
OpenJDK 64-Bit Server VM warning: INFO: os::commit_memory(0x00007b0fe0000000, 12288, 0) failed; error='Cannot allocate memory' (errno=12)
OpenJDK 64-Bit Server VM warning: Attempt to protect stack guard pages failed.
OpenJDK 64-Bit Server VM warning: Attempt to protect stack guard pages failed.
OpenJDK 64-Bit Server VM warning: Attempt to deallocate stack guard pages failed.
Exception in thread "main" java.lang.OutOfMemoryError: unable to create new native thread
	at java.lang.Thread.start0(Native Method)
	at java.lang.Thread.start(Thread.java:719)
	at zxf.java.memory.oom.TestThreadStackSpaceOOM.main(TestThreadStackSpaceOOM.java:33)
OpenJDK 64-Bit Server VM warning: Attempt to deallocate stack guard pages failed.
OpenJDK 64-Bit Server VM warning: INFO: os::commit_memory(0x00007f09f7200000, 12288, 0) failed; error='Cannot allocate memory' (errno=12)
OpenJDK 64-Bit Server VM warning: Attempt to deallocate stack guard pages failed.

Process finished with exit code 1
